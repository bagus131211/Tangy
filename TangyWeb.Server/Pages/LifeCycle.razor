@page "/lifeCycle"

<h3>LifeCycle</h3>

<p role="status">Current count: @currentCount</p>

<button class="btn btn-primary" @onclick="IncrementCount">Click me</button>
<br />
<br />

<div class="border">
    <_LifeCycleChild CountValue=@currentCount></_LifeCycleChild>
</div>

@foreach (var item in EventType)
{
    @item
    <hr />
}

@code {
    int currentCount = 0;
    List<string> EventType = new();

    void IncrementCount()
    {
        currentCount++;
    }

    protected override void OnInitialized()
        => EventType.Add("OnInitialized called");

    protected override async Task OnInitializedAsync()
        => await Task.Run(() => EventType.Add("OnInitializedAsync called"));

    protected override void OnParametersSet()
        => EventType.Add("OnParameterSet called");

    protected override async Task OnParametersSetAsync()
        => await Task.Run(() => EventType.Add("OnParameterSetAsync called"));

    protected override void OnAfterRender(bool firstRender)
    {
        if (firstRender)
            currentCount = 11;
        else
            currentCount = 99;
        EventType.Add("OnAfterRender called");
    } 

    protected override async Task OnAfterRenderAsync(bool firstRender)
        => await Task.Run(() => EventType.Add("OnAfterRenderAsync called"));


}