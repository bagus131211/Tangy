@page "/"
@using System.Globalization
@inject IProductService _productService

@*<AuthorizeView>
    <Authorized>
    <p>Welcome, @context.User.Identity.Name</p>
    </Authorized>
    <NotAuthorized>
    <p>Not Login!</p>
    </NotAuthorized>
    </AuthorizeView>*@

@if (isProcessing)
{
    <div style="position:fixed;top:50%;left:50%;margin-top:-50px;margin-left:-100px;">
        <img src="images/search.gif" />
    </div>
}
else
{
    <div class="container">
        <div class="row  pb-3 pt-3 backgroundWhite">
            @foreach (var category in products.Select(u => u.Category.Name).Distinct())
            {
                <h2 class="text-success pl-1"><b>@category</b></h2>

                @foreach (var product in products.Where(u => u.Category.Name == category))
                {
                    <div class="col-lg-4 col-md-6 pb-4 filter">
                        <div class="card bg-white rounded shadow-sm" style="border:1px solid #222">
                            <div class="card-body pb-1 row">
                                <div class="col-4 h5">@product.Name</div>
                                <div class="col-8 text-end">
                                    <span class="text-info h4">
                                        @(string.Format(CultureInfo.GetCultureInfo("id-ID"), "{0:C2}", product.ProductPrices.OrderBy(o => o.Price).FirstOrDefault()?.Price))
                                    </span>
                                </div>
                            </div>

                            <img class="card-img-top img-fluid d-block mx-auto mb-3" src=@product.ImageUri alt="menuitem image">
                            <div class="card-body p-1 px-3 row">
                                <div class="col-6">
                                    <span class="badge p-2 border w-100 text-dark bg-warning ">@product.Category.Name</span>
                                </div>
                                <div class="col-6 border-0">
                                    <span class="badge p-2 border w-100 bg-info ">@product.Colour</span>
                                </div>
                                <div class="col-12 pt-2" style="font-size:13px; text-align:justify">
                                    <p>@((MarkupString)product.Description)</p>
                                </div>
                                <div class="col-12 p-1">
                                    <a href="/details/@product.Id" class="btn btn-dark form-control btn-sm p-2" style="height:40px">View Details</a>
                                </div>
                            </div>
                        </div>
                    </div>
                }
            }
        </div>
    </div>
}


@code {
    bool isProcessing = false;
    IEnumerable<ProductDTO> products = new List<ProductDTO>();

    protected override async Task OnInitializedAsync()
    {
        isProcessing = true;
        products = await _productService.GetAll();
        isProcessing = false;
    }
}